{"version":3,"sources":["webpack:///./src/app/task-list/task-list.module.ts","webpack:///./src/app/task-list/task-list.page.html","webpack:///./src/app/task-list/task-list.page.scss","webpack:///./src/app/task-list/task-list.page.ts"],"names":[],"mappings":"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","file":"task-list-task-list-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { TaskListPage } from './task-list.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TaskListPage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  declarations: [TaskListPage]\r\n})\r\nexport class TaskListPageModule {}\r\n","module.exports = \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-title>Tasks</ion-title>\\r\\n    <ion-button slot=\\\"end\\\" (click)= \\\"addItem()\\\">\\r\\n      <ion-icon slot=\\\"end\\\" name=\\\"add\\\"></ion-icon>\\r\\n     Add Item\\r\\n    </ion-button>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<ion-content>\\r\\n    <ion-list>\\r\\n      <ion-item-sliding *ngFor=\\\"let task of tasks | async\\\" #slidingItem>\\r\\n        <ion-item [ngClass]=\\\"{taskDone: task.status == 'done'}\\\">\\r\\n            {{ task.title }}\\r\\n        </ion-item>\\r\\n        <ion-item-options side=\\\"end\\\" (ionSwipe)=\\\"removeTask(slideingItem, task)\\\">\\r\\n          <ion-button (click)=\\\"markAsDone(slidingItem,task)\\\" color=\\\"secondary\\\">\\r\\n            <ion-icon name=\\\"checkmark\\\"></ion-icon>\\r\\n          </ion-button>\\r\\n          <ion-item-option (click)=\\\"removeTask(slidingItem,task)\\\" color=\\\"danger\\\" expandable>\\r\\n            <ion-button (click)=\\\"removeTask(slidingItem,task)\\\" color=\\\"danger\\\">\\r\\n              <ion-icon name=\\\"trash\\\" id=\\\"delete\\\"></ion-icon>\\r\\n            </ion-button>\\r\\n          </ion-item-option>\\r\\n          \\r\\n        </ion-item-options>\\r\\n      </ion-item-sliding>\\r\\n    </ion-list>                                                                                                                                                                                                                                                                                                                                                                                                                                                           \\r\\n</ion-content>\\r\\n\"","module.exports = \".taskDone {\\n  text-decoration: line-through; }\\n\\n#delete {\\n  padding: 0; }\\n\\nion-toolbar {\\n  --background: #abcaff; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGFzay1saXN0L0Q6XFxHaXRIdWJcXENJVFBULTIyNy02MF9Ub2RvLWFwcC9zcmNcXGFwcFxcdGFzay1saXN0XFx0YXNrLWxpc3QucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksNkJBQTZCLEVBQUE7O0FBRWpDO0VBQ0ksVUFBVSxFQUFBOztBQUVkO0VBQ0kscUJBQWEsRUFBQSIsImZpbGUiOiJzcmMvYXBwL3Rhc2stbGlzdC90YXNrLWxpc3QucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2tEb25lIHtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xyXG59XHJcbiNkZWxldGV7XHJcbiAgICBwYWRkaW5nOiAwO1xyXG59XHJcbmlvbi10b29sYmFye1xyXG4gICAgLS1iYWNrZ3JvdW5kOiAjYWJjYWZmO1xyXG59Il19 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\nimport { IonItemSliding } from '@ionic/angular';\r\n\r\nimport { AlertController, ToastController } from '@ionic/angular';\r\n\r\nimport { Task } from './task';\r\n\r\nimport { AngularFireDatabase, AngularFireList } from 'angularfire2/database';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-task-list',\r\n  templateUrl: './task-list.page.html',\r\n  styleUrls: ['./task-list.page.scss'],\r\n})\r\nexport class TaskListPage implements OnInit {\r\n  taskList: AngularFireList<Task>;\r\n\r\n  tasks: Observable<any[ ]>;\r\n\r\n  constructor( \r\n    public alertCtrl: AlertController, \r\n    public toastCtrl: ToastController,\r\n    public af: AngularFireDatabase\r\n  ){\r\n    this.taskList = this.af.list('/tasks'); \r\n    this.tasks = this.taskList.valueChanges();\r\n  }\r\n\r\n  async addItem(){\r\n    let prompt = await this.alertCtrl.create({\r\n      header: 'Todo List',\r\n      message: 'Add a Task',\r\n      inputs: [{\r\n        name: 'newTask',\r\n        type: 'text'\r\n      }],\r\n      buttons: [{\r\n        text: 'Cancel',\r\n        role: 'cancel'\r\n      },{\r\n        text: 'Add to List',\r\n        handler: data => {\r\n          let newTaskRef = this.taskList.push(\r\n            { id: '', title: data.newTask, status: 'open' });\r\n          newTaskRef.update( { id: newTaskRef.key } )\r\n          toast.present();\r\n        }\r\n      }]\r\n    });\r\n\r\n    let toast = await this.toastCtrl.create({\r\n      message: \"Item Added!\",\r\n      duration: 5000,\r\n      showCloseButton: true,\r\n      color: 'dark'\r\n    });\r\n    prompt.present();\r\n  }\r\n\r\n    markAsDone(slidingItem: IonItemSliding, task: any) {\r\n      if (task.status != \"done\"){\r\n      task.status = \"done\";\r\n      this.taskList.update( task.id, task );\r\n      }else{\r\n      task.status = \"open\";\r\n      }\r\n      slidingItem.close();\r\n    }\r\n    \r\n    removeTask(slidingItem: IonItemSliding, task: any){\r\n      this.taskList.remove( task.id );\r\n      slidingItem.close();\r\n    }\r\n\r\n  ngOnInit() {}\r\n\r\n}\r\n"],"sourceRoot":""}